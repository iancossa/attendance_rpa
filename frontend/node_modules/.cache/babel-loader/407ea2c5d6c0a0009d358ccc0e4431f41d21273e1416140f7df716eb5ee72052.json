{"ast":null,"code":"import { create } from 'zustand';\nexport const useAuthStore = create(set => ({\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  login: (user, token) => {\n    localStorage.setItem('token', token);\n    set({\n      user,\n      token,\n      isAuthenticated: true\n    });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    set({\n      user: null,\n      token: null,\n      isAuthenticated: false\n    });\n  }\n}));","map":{"version":3,"names":["create","useAuthStore","set","user","token","localStorage","getItem","isAuthenticated","login","setItem","logout","removeItem"],"sources":["c:/Users/Admin/Documents/IanDev/attendance-rpa/frontend/src/store/authStore.ts"],"sourcesContent":["import { create } from 'zustand'\n\ninterface User {\n  id: number\n  email: string\n  name: string\n  role: string\n}\n\ninterface AuthState {\n  user: User | null\n  token: string | null\n  isAuthenticated: boolean\n  login: (user: User, token: string) => void\n  logout: () => void\n}\n\nexport const useAuthStore = create<AuthState>((set) => ({\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  login: (user, token) => {\n    localStorage.setItem('token', token)\n    set({ user, token, isAuthenticated: true })\n  },\n  logout: () => {\n    localStorage.removeItem('token')\n    set({ user: null, token: null, isAuthenticated: false })\n  },\n}))"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAiBhC,OAAO,MAAMC,YAAY,GAAGD,MAAM,CAAaE,GAAG,KAAM;EACtDC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,eAAe,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChDE,KAAK,EAAEA,CAACL,IAAI,EAAEC,KAAK,KAAK;IACtBC,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IACpCF,GAAG,CAAC;MAAEC,IAAI;MAAEC,KAAK;MAAEG,eAAe,EAAE;IAAK,CAAC,CAAC;EAC7C,CAAC;EACDG,MAAM,EAAEA,CAAA,KAAM;IACZL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCT,GAAG,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE,IAAI;MAAEG,eAAe,EAAE;IAAM,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}