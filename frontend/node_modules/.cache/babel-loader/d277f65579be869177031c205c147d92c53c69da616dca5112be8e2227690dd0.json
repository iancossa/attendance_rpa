{"ast":null,"code":"import { create } from 'zustand';\nexport const useThemeStore = create(set => ({\n  isDark: false,\n  toggleTheme: () => set(state => {\n    const newTheme = !state.isDark;\n\n    // Apply theme to document\n    if (newTheme) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n\n    // Save to localStorage\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n    return {\n      isDark: newTheme\n    };\n  })\n}));","map":{"version":3,"names":["create","useThemeStore","set","isDark","toggleTheme","state","newTheme","document","documentElement","classList","add","remove","localStorage","setItem"],"sources":["C:/Users/Admin/Documents/IanDev/attendance-rpa/frontend/src/store/themeStore.ts"],"sourcesContent":["import { create } from 'zustand'\n\ninterface ThemeState {\n  isDark: boolean\n  toggleTheme: () => void\n}\n\nexport const useThemeStore = create<ThemeState>((set) => ({\n  isDark: false,\n  toggleTheme: () => set((state) => {\n    const newTheme = !state.isDark\n    \n    // Apply theme to document\n    if (newTheme) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n    \n    // Save to localStorage\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light')\n    \n    return { isDark: newTheme }\n  }),\n}))"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAOhC,OAAO,MAAMC,aAAa,GAAGD,MAAM,CAAcE,GAAG,KAAM;EACxDC,MAAM,EAAE,KAAK;EACbC,WAAW,EAAEA,CAAA,KAAMF,GAAG,CAAEG,KAAK,IAAK;IAChC,MAAMC,QAAQ,GAAG,CAACD,KAAK,CAACF,MAAM;;IAE9B;IACA,IAAIG,QAAQ,EAAE;MACZC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;;IAEA;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;IAE1D,OAAO;MAAEH,MAAM,EAAEG;IAAS,CAAC;EAC7B,CAAC;AACH,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}