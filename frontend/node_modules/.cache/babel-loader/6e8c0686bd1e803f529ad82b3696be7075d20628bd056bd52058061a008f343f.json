{"ast":null,"code":"import { create } from 'zustand';\nconst getInitialTheme = () => {\n  if (typeof window === 'undefined') return false;\n  const stored = localStorage.getItem('theme');\n  return stored === 'dark' || !stored && window.matchMedia('(prefers-color-scheme: dark)').matches;\n};\nconst applyTheme = isDark => {\n  if (typeof document !== 'undefined') {\n    if (isDark) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }\n};\nexport const useThemeStore = create((set, get) => {\n  const initialTheme = getInitialTheme();\n  applyTheme(initialTheme);\n  return {\n    isDark: initialTheme,\n    toggleTheme: () => {\n      const newTheme = !get().isDark;\n      localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n      applyTheme(newTheme);\n      set({\n        isDark: newTheme\n      });\n    },\n    setTheme: isDark => {\n      localStorage.setItem('theme', isDark ? 'dark' : 'light');\n      applyTheme(isDark);\n      set({\n        isDark\n      });\n    }\n  };\n});","map":{"version":3,"names":["create","getInitialTheme","window","stored","localStorage","getItem","matchMedia","matches","applyTheme","isDark","document","documentElement","classList","add","remove","useThemeStore","set","get","initialTheme","toggleTheme","newTheme","setItem","setTheme"],"sources":["C:/Users/Admin/Documents/IanDev/attendance-rpa/frontend/src/store/themeStore.ts"],"sourcesContent":["import { create } from 'zustand'\n\ninterface ThemeState {\n  isDark: boolean\n  toggleTheme: () => void\n  setTheme: (isDark: boolean) => void\n}\n\nconst getInitialTheme = () => {\n  if (typeof window === 'undefined') return false\n  const stored = localStorage.getItem('theme')\n  return stored === 'dark' || (!stored && window.matchMedia('(prefers-color-scheme: dark)').matches)\n}\n\nconst applyTheme = (isDark: boolean) => {\n  if (typeof document !== 'undefined') {\n    if (isDark) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  }\n}\n\nexport const useThemeStore = create<ThemeState>((set, get) => {\n  const initialTheme = getInitialTheme()\n  applyTheme(initialTheme)\n  \n  return {\n    isDark: initialTheme,\n    toggleTheme: () => {\n      const newTheme = !get().isDark\n      localStorage.setItem('theme', newTheme ? 'dark' : 'light')\n      applyTheme(newTheme)\n      set({ isDark: newTheme })\n    },\n    setTheme: (isDark: boolean) => {\n      localStorage.setItem('theme', isDark ? 'dark' : 'light')\n      applyTheme(isDark)\n      set({ isDark })\n    },\n  }\n})"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAQhC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAO,KAAK;EAC/C,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC5C,OAAOF,MAAM,KAAK,MAAM,IAAK,CAACA,MAAM,IAAID,MAAM,CAACI,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAQ;AACpG,CAAC;AAED,MAAMC,UAAU,GAAIC,MAAe,IAAK;EACtC,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;IACnC,IAAID,MAAM,EAAE;MACVC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGf,MAAM,CAAa,CAACgB,GAAG,EAAEC,GAAG,KAAK;EAC5D,MAAMC,YAAY,GAAGjB,eAAe,CAAC,CAAC;EACtCO,UAAU,CAACU,YAAY,CAAC;EAExB,OAAO;IACLT,MAAM,EAAES,YAAY;IACpBC,WAAW,EAAEA,CAAA,KAAM;MACjB,MAAMC,QAAQ,GAAG,CAACH,GAAG,CAAC,CAAC,CAACR,MAAM;MAC9BL,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAED,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;MAC1DZ,UAAU,CAACY,QAAQ,CAAC;MACpBJ,GAAG,CAAC;QAAEP,MAAM,EAAEW;MAAS,CAAC,CAAC;IAC3B,CAAC;IACDE,QAAQ,EAAGb,MAAe,IAAK;MAC7BL,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEZ,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;MACxDD,UAAU,CAACC,MAAM,CAAC;MAClBO,GAAG,CAAC;QAAEP;MAAO,CAAC,CAAC;IACjB;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}