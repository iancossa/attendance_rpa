{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (email, password, name, employeeId) => api.post('/auth/register', {\n    email,\n    password,\n    name,\n    employeeId\n  })\n};\nexport const attendanceAPI = {\n  mark: data => api.post('/attendance', data),\n  getRecords: params => api.get('/attendance', {\n    params\n  }),\n  getSummary: () => api.get('/attendance/summary')\n};\nexport const userAPI = {\n  getProfile: () => api.get('/users/profile'),\n  getAll: () => api.get('/users'),\n  update: (id, data) => api.put(`/users/${id}`, data)\n};\nexport const classAPI = {\n  getAll: () => api.get('/classes'),\n  create: data => api.post('/classes', data),\n  update: (id, data) => api.put(`/classes/${id}`, data),\n  delete: id => api.delete(`/classes/${id}`)\n};\nexport const reportsAPI = {\n  generate: (type, params) => api.post('/reports/generate', {\n    type,\n    ...params\n  }),\n  getAll: () => api.get('/reports'),\n  download: id => api.get(`/reports/${id}/download`)\n};\nexport const qrAPI = {\n  generateSession: (classId, className) => api.post('/qr/generate', {\n    classId,\n    className\n  }),\n  markAttendance: (sessionId, studentId, studentName) => api.post(`/qr/mark/${sessionId}`, {\n    studentId,\n    studentName\n  }),\n  getSessionStatus: sessionId => api.get(`/qr/session/${sessionId}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","login","email","password","post","register","name","employeeId","attendanceAPI","mark","data","getRecords","params","get","getSummary","userAPI","getProfile","getAll","update","id","put","classAPI","delete","reportsAPI","generate","type","download","qrAPI","generateSession","classId","className","markAttendance","sessionId","studentId","studentName","getSessionStatus"],"sources":["c:/Users/Admin/Documents/IanDev/attendance-rpa/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios'\n\nconst API_BASE_URL = 'http://localhost:5000/api'\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  return config\n})\n\nexport const authAPI = {\n  login: (email: string, password: string) =>\n    api.post('/auth/login', { email, password }),\n  register: (email: string, password: string, name: string, employeeId?: string) =>\n    api.post('/auth/register', { email, password, name, employeeId }),\n}\n\nexport const attendanceAPI = {\n  mark: (data: any) => api.post('/attendance', data),\n  getRecords: (params?: any) => api.get('/attendance', { params }),\n  getSummary: () => api.get('/attendance/summary'),\n}\n\nexport const userAPI = {\n  getProfile: () => api.get('/users/profile'),\n  getAll: () => api.get('/users'),\n  update: (id: number, data: any) => api.put(`/users/${id}`, data),\n}\n\nexport const classAPI = {\n  getAll: () => api.get('/classes'),\n  create: (data: any) => api.post('/classes', data),\n  update: (id: number, data: any) => api.put(`/classes/${id}`, data),\n  delete: (id: number) => api.delete(`/classes/${id}`),\n}\n\nexport const reportsAPI = {\n  generate: (type: string, params: any) => api.post('/reports/generate', { type, ...params }),\n  getAll: () => api.get('/reports'),\n  download: (id: number) => api.get(`/reports/${id}/download`),\n}\n\nexport const qrAPI = {\n  generateSession: (classId: string, className: string) => api.post('/qr/generate', { classId, className }),\n  markAttendance: (sessionId: string, studentId: string, studentName: string) => api.post(`/qr/mark/${sessionId}`, { studentId, studentName }),\n  getSessionStatus: (sessionId: string) => api.get(`/qr/session/${sessionId}`),\n}\n\nexport default api"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}